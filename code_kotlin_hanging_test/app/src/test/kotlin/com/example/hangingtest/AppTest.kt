/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.hangingtest

import io.temporal.testing.TestEnvironmentOptions
import io.temporal.testing.TestWorkflowEnvironment
import io.temporal.worker.WorkerFactory
import kotlin.test.BeforeTest
import kotlin.test.Test
import kotlin.test.assertEquals
import org.junit.jupiter.api.Timeout
import java.time.Duration
import java.time.Instant.now
import java.util.concurrent.TimeUnit


class AppTest {
    private lateinit var testEnv: TestWorkflowEnvironment

    @BeforeTest
    fun setup() {
        val opts = TestEnvironmentOptions.newBuilder()
//            .setUseTimeskipping(false)
            .build()
        testEnv = TestWorkflowEnvironment.newInstance(opts)
        val workerFactory = WorkerFactory.newInstance(testEnv.workflowClient)
        val worker = workerFactory.newWorker("HelloActivityTaskQueue")
        worker.registerWorkflowImplementationTypes(GreetingWorkflowImpl::class.java)
        worker.registerActivitiesImplementations(GreetingActivitiesImpl())
        workerFactory.start()
    }

    @Test
//    @Timeout(value = 3, unit = TimeUnit.SECONDS)
    fun greeting() {
        val classUnderTest = App(testEnv.workflowClient)
        val handle = classUnderTest.spawn("Gaurav")

        println("pre sleep ${now()}")
        testEnv.sleep(Duration.ofSeconds(0))

        println("post sleep ${now()}")

        val result = classUnderTest.getResult(handle)
        assertEquals(result, "Salutations, Gaurav!")
    }
}
