/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.hangingtest

import io.temporal.api.common.v1.WorkflowExecution
import io.temporal.client.WorkflowClient
import io.temporal.client.WorkflowOptions
import java.time.Duration
import java.time.Instant.now
import java.util.*


const val TASK_QUEUE = "HelloActivityTaskQueue"

class Starter(private val client: WorkflowClient) {
    private fun workflowStub() = WorkflowOptions {
        setWorkflowId("WORKFLOW_ID_${UUID.randomUUID()}")
        setTaskQueue(TASK_QUEUE)
    }.let { wo ->
        client.newWorkflowStub(
            GreetingWorkflow::class.java, wo
        )
    }

    fun spawn(arg: String): WorkflowExecution {
        println("Initiate workflow at ${now()}")
        return WorkflowClient.start(workflowStub()::greeting, arg)
    }

    fun getResult(handle: WorkflowExecution): String =
        client.newUntypedWorkflowStub(handle.workflowId).getResult(String::class.java)
}

fun starter() {
    val starter = Starter(client(namespace ="gaurav-test.a2dd6"))
//
//    while (true) {
//        val arg = "Thadani  ${UUID.randomUUID()}"
//        starter.spawn(arg)
//        println("Created ${arg}")
//        Thread.sleep(3000)
//    }

    val arg = "Thadani  ${UUID.randomUUID()}"
    starter.spawn(arg)
    println("Created ${arg}")
}




