/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.hangingtest

import io.temporal.client.WorkflowClient
import io.temporal.client.WorkflowClientOptions
import io.temporal.serviceclient.SimpleSslContextBuilder
import io.temporal.serviceclient.WorkflowServiceStubs
import io.temporal.serviceclient.WorkflowServiceStubsOptions
import io.temporal.worker.WorkerFactory
import io.temporal.worker.WorkerOptions
import java.io.File
import java.io.InputStream
import java.time.Duration


fun main() {

    val clientCert = readFileAsInputStream("ca.pem")
    val clientKey= readFileAsInputStream("ca.key")
    val newServiceStubs = WorkflowServiceStubs.newServiceStubs(
        WorkflowServiceStubsOptions {

            setSslContext(SimpleSslContextBuilder.forPKCS8(clientCert, clientKey).build())
            setEnableHttps(true)
            setTarget("gaurav-test.a2dd6.tmprl.cloud:7233")
        }
    )
    val client = WorkflowClient.newInstance(newServiceStubs, WorkflowClientOptions {
        setNamespace("gaurav-test.a2dd6")
    })
    val factory =
        WorkerFactory.newInstance(client).also { factory ->
            factory.newWorker(TASK_QUEUE, WorkerOptions {
                setDefaultHeartbeatThrottleInterval(Duration.ofSeconds(10))
            }).apply {
                registerWorkflowImplementationTypes(GreetingWorkflowImpl::class.java)
                registerActivitiesImplementations(GreetingActivitiesImpl())
            }
        }


    factory.start()

//    Promise.allOf(wf, wf2, wf3)
//    exitProcess(0)
}

fun readFileAsInputStream(fileName: String): InputStream {
    return File("/Users/gauravthadani/Work/Code/src/github.com/gauravthadani/temporal-template/code/app/src/main/resources/" +fileName).inputStream()
}


