/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    id("com.github.johnrengelman.shadow") version "7.0.0"
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
    testImplementation("org.awaitility:awaitility-kotlin:4.3.0")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    implementation("io.temporal:temporal-sdk:1.28.1")
    implementation("io.temporal:temporal-kotlin:1.28.1")
    implementation("com.github.ajalt.clikt:clikt:5.0.1")

    implementation("org.slf4j:slf4j-api:1.7.32")
    implementation("ch.qos.logback:logback-classic:1.2.6")
    implementation("com.sksamuel.hoplite:hoplite-core:2.9.0")
    implementation("com.sksamuel.hoplite:hoplite-json:2.9.0")
    testImplementation("io.temporal:temporal-testing:1.28.1")


    // This dependency is used by the application.
    implementation(libs.guava)
}
tasks {
    shadowJar {
        archiveBaseName.set("app")
        archiveClassifier.set("all")
        archiveVersion.set("")
        mergeServiceFiles()
        from(project.sourceSets.main.get().resources.srcDirs) {
            into("resources")
        }
    }
}
tasks {
    jar{
        manifest {
            attributes["Main-Class"] = "com.example.hangingtest.AppKt"
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}




application {
    // Define the main class for the application.
    mainClass = "com.example.hangingtest.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
